name: Issue Notification to Discord

# This workflow will run on these events
on:
  issues:
    types: [opened, edited, deleted, labeled, unlabeled, closed, reopened]
  issue_comment:
    types: [created, edited, deleted]

# This job will send a notification to Discord
jobs:
  send-notification:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Extract and prepare data from the GitHub event payload
      - name: Prepare Issue Data
        id: prepare_data
        run: |
          ACTION=$(jq -r '.action' $GITHUB_EVENT_PATH)
          ISSUE_TITLE=$(jq -r '.issue.title' $GITHUB_EVENT_PATH)
          ISSUE_URL=$(jq -r '.issue.html_url' $GITHUB_EVENT_PATH)
          ACTOR=$(jq -r '.sender.login' $GITHUB_EVENT_PATH)

          if [ "${{ github.event_name }}" == "issues" ]; then
            if [ "${ACTION}" == "closed"]; then
              printf -v MESSAGE="**Se a cerrao la issue, el responsable es ${ACTOR}.**\nIssue: [${ISSUE_TITLE}](${ISSUE_URL})"
            else
              MESSAGE="**An issue has been ${ACTION} by ${ACTOR}.**\nIssue: [${ISSUE_TITLE}](${ISSUE_URL})"
            fi
          elif [ "${{ github.event_name }}" == "issue_comment" ]; then
            COMMENT_BODY=$(jq -r '.comment.body' $GITHUB_EVENT_PATH)
            MESSAGE="**A comment was created by ${ACTOR} on issue:** [${ISSUE_TITLE}](${ISSUE_URL})\n>>>${COMMENT_BODY}"
          fi

          echo "message=$MESSAGE" >> $GITHUB_ENV

      # Step 2: Send the Discord notification using the prepared variables
      - name: Send Discord notification
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_UPDATES_ID }}
          webhook_token: ${{ secrets.DISCORD_UPDATES_TOKEN }}
          username: 'GitHub Updates'
          avatar_url: 'https://i.imgur.com/2s4P66D.png'
          message: 'New event on ${{ env.message }}'
          file: ''
          tts: false
          debug: false
